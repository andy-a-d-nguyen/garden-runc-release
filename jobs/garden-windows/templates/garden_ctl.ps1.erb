$ErrorActionPreference = "Stop";
trap { $host.SetShouldExit(1) }

$gardenDir="C:\var\vcap\data\garden"
$depotDir=(Join-Path $gardenDir "depot")
$imageStore=(Join-Path $gardenDir "image-store")
$runtimeBinDir=(Join-Path $gardenDir "bin" | Join-Path -ChildPath "winit")
$initBinPath=(Join-Path $runtimeBinDir "garden-init.exe")

New-Item $depotDir -ItemType Directory -Force
New-Item $imageStore -ItemType Directory -Force
New-Item $runtimeBinDir -ItemType Directory -Force
Copy-Item "C:\var\vcap\packages\guardian-windows\winit.exe" -Destination $initBinPath

<%
def parse_ip (ip, var_name)
  unless ip.empty?
    ip = ip.split(":")[0]
      begin 
        parsed = IPAddr.new ip
      rescue  => e
        raise "Invalid #{var_name} '#{ip}': #{e}"
      end
  end
end

parse_ip(p('garden.listen_address'), 'garden.listen_address')

%>

C:\var\vcap\packages\guardian-windows\gdn.exe `
  server `
  --skip-setup `
  --depot=$depotDir `
  --read-header-timeout=<%= p("garden.read_header_timeout") %> `
  --log-level=<%= p("garden.log_level") %> `
  <% ip, port = p("garden.listen_address").split(":") %> `
  --bind-ip=<%= ip %> `
  --bind-port=<%= port %> `
  --max-containers=<%= p("garden.max_containers") %> `
  <% if !p("garden.default_container_rootfs").empty? %> `
  --default-rootfs=<%= p("garden.default_container_rootfs") %> `
  <% end %> `
  --runtime-plugin=<%= p("garden.runtime_plugin") %> `
  <% p("garden.runtime_plugin_extra_args").each do |arg| %> `
  --runtime-plugin-extra-arg=<%= arg %> `
  <% end %> `
  --image-plugin=<%= p("garden.image_plugin") %> `
  <% p("garden.image_plugin_extra_args").each do |arg| %> `
  --image-plugin-extra-arg=<%= arg %> `
  <% end %> `
  --network-plugin=<%= p("garden.network_plugin") %> `
  <% p("garden.network_plugin_extra_args").each do |arg| %> `
  --network-plugin-extra-arg=<%= arg %> `
  <% end %> `
  --nstar-bin=<%= p("garden.nstar_bin") %> `
  --tar-bin=<%= p("garden.tar_bin") %> `
  --init-bin=$initBinPath `
  <% if !p("garden.dropsonde.origin").empty? %> `
    --dropsonde-origin=<%= p("garden.dropsonde.origin") %> `
  <% end %> `
  <% if_p("garden.dropsonde.destination") do |destination| %> `
    --dropsonde-destination=<%= destination %> `
  <% end %> `
  <% if p("garden.destroy_containers_on_start") %> `
  --destroy-containers-on-startup `
  <% end %> `
  <% if_p("logging.format.timestamp") do |format| %> `
  <% if format != "unix-epoch" and format != "rfc3339" %> `
    <% raise "logging.format.timestamp should be one of: 'unix-epoch' or 'rfc3339'" %> `
  <% end %> `
  --time-format=<%= format %> `
  <% end %> `
  <% if p("garden.cleanup_process_dirs_on_wait") == true %> `
  --cleanup-process-dirs-on-wait `
  <% end %>
